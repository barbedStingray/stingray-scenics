.frosty-button {
    --_padding: 1rem 1.5rem;
    --_transition-speed: 200ms;

    --_hover-opacity: 0.4;
    --_pressed_opacity: 0.15;
    
    --_hover-blur: 5px;
    --_pressed-blur: 10px;

    --_hover-offset: 0.5rem;
    --_pressed-offset: 0.25rem;

    --_frost: 0.15;


    /* border: 2px solid purple; */
    cursor: pointer;
    outline: 0;
    /* padding: 0; */
    border: 0;
    border-radius: 1rem;
    background-color: transparent;
    position: relative;


    span {
        display: block;
        padding: var(--_padding);
        border-radius: inherit;

        /* grainy thing */
        /* overflow: hidden; */
        

        transition: 
            translate var(--_transition-speed),
            background-color var(--_transition-speed),
            backdrop-filter var(--_transition-speed);

        /* use glass morph?? */

        /* grainy stuff */
        &::before {
            content: '';
            position: absolute;
            inset: 0;
            z-index: -1;
            background-image: url("data:image/svg+xml,%3C!-- svg: first layer --%3E%3Csvg viewBox='0 0 172 172' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='3.72' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
            opacity: 0;
            transition: opacity var(--_transition-speed);
        }

    }


    /* the ampersand is a placeholder for '.frosty-button' when nested */
    &::after {
        content: '';
        position: absolute;
        inset: 0;
        border-radius: inherit;
        background-color: lightblue;
        z-index: -1;
        transition: 
        scale var(--_transition-speed),
        translate var(--_transition-speed);
    }

    &:hover,
    &:focus-visible {
        span {
            outline: 1px solid #ffffff77;
            background-color: hsl(0 0% 100% / var(--_hover-opacity));
            backdrop-filter: blur(var(--_hover-blur));
            translate: 0 calc(var(--_hover-offset) * -1);

            /* grainy stuff */
            &::before {
                opacity: var(--_frost);
                /* transition: opacity var(--_transition-speed) ease-out; */
            }
        }

        &::after {
            scale: 0.95;
            translate: 0 0.125rem;
        }
    }

    &:active {
        span {
            backdrop-filter: blur(var(--_pressed-blur));
            background-color: hsl(0 0% 100% / var(--_pressed-opacity));
            translate: 0 calc(var(--_pressed-offset) * -1);
        }

        &::after {
            scale: 0.88;
            translate: 0 0.25rem;
        }
    }
    
}


